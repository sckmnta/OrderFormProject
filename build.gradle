plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group 'ru.g'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def restAssuredVersion = "5.3.0",
    allureVersion = "2.19.0",
    slf4jVersion = "2.0.7"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }

}



dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:3.24.2",
            "com.codeborne:selenide:6.15.0",
            "com.github.javafaker:javafaker:1.0.2",
            "org.junit.jupiter:junit-jupiter:5.9.2",
            "org.slf4j:slf4j-simple:2.0.6",
            "io.qameta.allure:allure-selenide:2.21.0",
            "io.github.bonigarcia:webdrivermanager:5.3.2",
            "org.seleniumhq.selenium:selenium-java:4.8.3",
            "org.aeonbits.owner:owner:1.0.12",
            "com.codeborne:selenide:6.12.3",
            "org.assertj:assertj-core:3.24.2",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}
tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
compileJava {
    options.encoding = 'UTF-8'

    test {
        useJUnitPlatform()
    }
    test {
        useJUnitPlatform()
        systemProperties(System.getProperties())
    }

}